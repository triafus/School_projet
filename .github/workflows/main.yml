name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - feat/9---CICD-github-action
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: |
            client/pnpm-lock.yaml
            server/pnpm-lock.yaml

      - name: Install Client Dependencies
        run: cd client && pnpm install --no-frozen-lockfile

      - name: Install Server Dependencies
        run: cd server && pnpm install --no-frozen-lockfile

      - name: Build Client
        run: cd client && pnpm run build
        env:
          NODE_ENV: production

      - name: Build Server
        run: cd server && pnpm run build
        env:
          NODE_ENV: production

      - name: Upload Client Build
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/

      - name: Upload Server Build
        uses: actions/upload-artifact@v4
        with:
          name: server-build
          path: server/

  deploy-client:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Download Client Build
        uses: actions/download-artifact@v4
        with:
          name: client-build
          path: client/

      - name: Deploy Client to Vercel
        run: |
          cd client
          npx vercel --prebuilt --prod \
            -t ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_ORG_ID }} \
            --confirm

  deploy-server:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Download Server Build
        uses: actions/download-artifact@v4
        with:
          name: server-build
          path: server/

      - name: Deploy Server to Vercel
        run: |
          cd server
          npx vercel --prebuilt --prod \
            -t ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_ORG_ID }} \
            --confirm
